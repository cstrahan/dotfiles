[core]
	excludesfile = ~/.gitexcludes
	# less -R needed to prevent mismatched indentation between added/removed lines
	#pager = less --tabs=4 -RFXm
	pager = delta
#[interactive]
#	diffFilter = delta --color-only
[delta]
	plus-color = "#012800"
	minus-color = "#340001"
	syntax-theme = Monokai Extended
	# would love to add side-by-side, but that 
	features = line-numbers decorations
	whitespace-error-style = 22 reverse
[delta "decorations"]
	commit-decoration-style = bold yellow box ul
	file-style = bold yellow ul
	file-decoration-style = none
[color]
	ui = true
[init]
	templatedir = ~/.git_template
	defaultBranch = main
#[diff]
#	compactionHeuristic = 1
[difftool "kaleidoscope"]
	cmd = ksdiff-wrapper git \"$LOCAL\" \"$REMOTE\"
[difftool "diffmerge"]
	cmd = diffmerge \"$LOCAL\" \"$REMOTE\"
[merge]
	tool = "fugitive"
[mergetool.vimdiff3]
	cmd = vim -d -c 'wincmd J' "$MERGED" "$LOCAL" "$BASE" "$REMOTE"
[mergetool.gvimdiff3]
	cmd = gvim -d -c 'wincmd J' "$MERGED" "$LOCAL" "$BASE" "$REMOTE"
[mergetool.fugitive]
	cmd = vim -f -c "Gdiff" "$MERGED"
[mergetool "diffmerge"]
	cmd = "diffmerge --merge --result=\"$MERGED\" \"$LOCAL\" \"$(if test -f \"$BASE\"; then echo \"$BASE\"; else echo \"$LOCAL\"; fi)\" \"$REMOTE\""
	trustExitCode = true
[branch]
	autosetuprebase = always
[alias]

	frbi = "!f() { git rebase -i $(git log --pretty=oneline --color=always | fzf --ansi | cut -d ' ' -f1)^ ; }; f"
	sw = !git checkout $(git branch -a --format '%(refname:short)' | sed 's~origin/~~' | sort | uniq | fzf)

	fdiff = -c color.ui=always -c core.pager=\"diff-so-fancy | less --tabs=4 -RFXm\" diff
	branches = for-each-ref --sort=-committerdate --format=\"%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/remotes
	pf = push --force-with-lease
	st = status
	ci = commit
	co = checkout
	br = branch
	sb = show-branch
	cp = cherry-pick
	di = diff
	dc = diff --cached
	rb = rebase
	rbc = rebase --continue
	rbs = rebase --skip
	rl = reflog
	rs = remote show
	rt = remote
	ru = remote update
	rp = remote prune
	sm = submodule
	ign = ls-files -o -i --exclude-standard --directory
	aa = add --all
	ap = add --patch
	ff = merge --ff-only
	pullff = pull --ff-only
	noff = merge --no-ff
	pom = push origin master

	rmd = !"git ls-files --deleted -z | xargs -0 git rm"
	rms = "!f(){ git rm --cached \"$1\";rm -r \"$1\";rm -rf \".git/modules/$1\";git config -f .gitmodules --remove-section \"submodule.$1\";git config -f .git/config --remove-section \"submodule.$1\";git add .gitmodules; }; f"
	staged = diff --cached
	fix = commit --amend -C HEAD
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset %C(blue)<%an>%Creset' --abbrev-commit --date=relative

	wip = !"git add -A; git commit -m \"wip\""
	unwip = !"git log -n 1 | grep -q -c wip && git reset HEAD~1"
	rb = !"git wip;git rebase -i origin/master;git unwip"
	pr = !"git fetch;git wip;git rebase --stat origin;git unwip;git heads"
	head = !"git log -n1"
	lost = !"git fsck | awk '/dangling commit/ {print $3}' | git show --format='SHA1: %C(yellow)%h%Creset %f' --stdin | awk '/SHA1/ {sub(\"SHA1: \", \"\"); print}'"
	heads = !"git log origin/master.. --format='%Cred%h%Creset;%C(yellow)%an%Creset;%H;%Cblue%f%Creset' | git name-rev --stdin --always --name-only | column -t -s';'"
	#addcw = -c interactive.diffFilter=\"git diff --color-words\" add -p
[push]
	default = current
[http]
#	sslCAInfo = ...
[gpg]
	program = gpg


#[pager]
#	log = diff-highlight | less
#	show = diff-highlight | less
#	diff = diff-highlilight | less
[url "git@github.com:deciphernow/"]
	insteadOf = https://github.com/deciphernow/
[url "git@github.com:DecipherNow/"]
	insteadOf = https://github.com/DecipherNow/
[url "git@github.com:greymatter-io/"]
	insteadOf = https://github.com/greymatter-io/
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[color "diff"]
	meta = 11
	commit = yellow bold
	old = red bold
	new = green bold
	whitespace = red reverse
	frag = magenta bold
	func = cyan
[status]
	short = true
	branch
[include]
	path = .gitconfig.local
